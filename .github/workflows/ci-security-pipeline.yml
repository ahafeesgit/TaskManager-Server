name: 'CI Security Pipeline'

on:
  pull_request:
    branches: ['dev']
    # Only run when there are code changes
    paths:
      - '**/*.ts'
      - '**/*.js'
      - '**/*.tsx'
      - '**/*.jsx'
      - 'package*.json'
      - 'prisma/**'
  push:
    branches: ['dev']
  schedule:
    # Run monthly scan since Dependabot handles weekly dependency updates
    - cron: '0 2 1 * *'

jobs:
  ci-security:
    name: Lint, Build & Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Linting step - run on all events
      - name: Run ESLint
        run: npm run lint

      # Build verification step - only on PRs to avoid redundancy with CodeQL autobuild
      - name: Build project
        if: github.event_name == 'pull_request'
        run: npm run build

      # Quick security check on PRs only (Dependabot handles comprehensive updates)
      - name: Quick security audit
        if: github.event_name == 'pull_request'
        run: npm audit --audit-level=high
        continue-on-error: true

      # Initialize CodeQL for all events to prevent "waiting for status" issues
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          # Use basic queries on PRs, extended on pushes/schedule
          queries: ${{ github.event_name == 'pull_request' && 'security-only' || 'security-extended,security-and-quality' }}

      # Autobuild for CodeQL
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # Perform CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
